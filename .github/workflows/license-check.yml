name: License Check

on:
  pull_request:
    branches: [main, develop]
    paths:
      - 'package.json'
      - 'package-lock.json'
  schedule:
    - cron: '0 6 * * 1' # Weekly on Mondays at 6 AM UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

permissions:
  contents: read
  pull-requests: write

jobs:
  license-check:
    name: Check Dependency Licenses
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install license-checker
        run: npm install -g license-checker

      - name: Check for forbidden licenses
        id: check
        continue-on-error: true
        run: |
          # Check for forbidden licenses
          FORBIDDEN="GPL-3.0;AGPL-3.0;LGPL-3.0"

          license-checker --production --failOn "$FORBIDDEN" 2>&1 | tee license-check.txt

          EXIT_CODE=${PIPESTATUS[0]}
          echo "exit_code=${EXIT_CODE}" >> $GITHUB_OUTPUT

      - name: Generate license report
        run: |
          echo "# License Report" > license-report.md
          echo "" >> license-report.md
          echo "Generated on: $(date)" >> license-report.md
          echo "" >> license-report.md
          echo "## All Dependencies" >> license-report.md
          echo "" >> license-report.md

          # Generate detailed report
          license-checker --production --markdown --out licenses.md || true

          # Generate CSV for processing
          license-checker --production --csv --out licenses.csv || true

          # Append markdown report
          if [ -f licenses.md ]; then
            cat licenses.md >> license-report.md
          fi

      - name: Save license texts
        run: |
          mkdir -p third_party_licenses
          license-checker --production --customPath '{
            "name": "",
            "version": "",
            "description": "",
            "repository": "",
            "licenses": "",
            "licenseFile": ""
          }' --json --out licenses.json || true

          echo "License texts saved to third_party_licenses/"

      - name: Upload license report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: |
            license-report.md
            licenses.csv
            licenses.md
            licenses.json
            third_party_licenses/
          retention-days: 90

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const exitCode = '${{ steps.check.outputs.exit_code }}';

            let body = '';

            if (exitCode !== '0') {
              let checkOutput = 'No details available';
              if (fs.existsSync('license-check.txt')) {
                checkOutput = fs.readFileSync('license-check.txt', 'utf8');
              }

              body = `## ⚠️ License Check Failed

            This PR introduces dependencies with problematic licenses.

            <details>
            <summary>Forbidden License Details</summary>

            \`\`\`
            ${checkOutput}
            \`\`\`

            </details>

            ### Blocked Licenses
            - **GPL-3.0** - Copyleft license requiring source distribution
            - **AGPL-3.0** - Network copyleft requiring source for SaaS
            - **LGPL-3.0** - Copyleft for libraries

            **Action Required:**
            Please review these dependencies and either:
            1. Find alternative packages with compatible licenses
            2. Remove the problematic dependencies
            3. Seek legal approval for exceptions

            **Allowed Licenses:** MIT, Apache-2.0, BSD, ISC, and similar permissive licenses.
              `;
            } else {
              body = `## ✅ License Check Passed

            All dependency licenses are compliant with organization standards.

            **Allowed Licenses:** MIT, Apache-2.0, BSD, ISC, and similar permissive licenses.

            [View full license report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
              `;
            }

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: body
            });

      - name: Fail if forbidden licenses found
        if: steps.check.outputs.exit_code != '0'
        run: |
          echo "❌ Forbidden licenses detected"
          echo "Please review the dependencies and remove packages with incompatible licenses"
          exit 1
